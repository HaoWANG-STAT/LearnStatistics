---
title: "Distributions"
format: html
editor: visual
---

```{r}
#| label: set-up
#| echo: FALSE

suppressPackageStartupMessages({
  library(tidyverse)
  library(knitr)
  library(kableExtra)
  library(mvtnorm)
  library(here)
})
```

```{r}
#| label: Normalization of Chi-Square test statistics using W-H transformation 
#| echo: false

# cmh test statistic follows Chisq distribution
dt <- tibble(X=rchisq(1e4, df = 1, ncp = 0)) %>% 
  mutate(WH = (X^(1/3) - (1 - 2/(9*1)))/sqrt(2/9),
         WH_p = pnorm(WH, lower.tail = F),
         X_p = pchisq(X, df = 1, lower.tail = F)) # WH transformation

# monotonic transformation
dt %>% ggplot() +
    geom_line(aes(x=X, y = WH), colour = 3) 

# density plots visualization
dt %>% ggplot() +
  xlim(-5, 5) +
  geom_histogram(aes(x=X, y = ..density..),
                 colour = 2, fill = "red", alpha=0.25) +
  geom_histogram(aes(x=WH, y = ..density..),
                 colour = 1, fill = "white", alpha=0.25) +
  geom_density(aes(x=WH))+
  
  stat_function(fun = function(x) dnorm(x, mean = 0, sd = 1),
                color = "red", linetype = "dotted", size = 1) +
  stat_function(fun = dchisq, args = list(df = 1, ncp=0),
                color = "blue", linetype = "dotted", size = 1) +
  
  stat_function(fun = function(x) pnorm(x, mean = 0, sd = 1),
                color = "red", linetype = "dashed", size = 1) +
  stat_function(fun = pchisq, args = list(df = 1, ncp=0),
                color = "blue", linetype = "dashed", size = 1)

# comparison of pValue from Chi-square test and WH transformed chi-square test (Z)
dt %>% ggplot() +
    geom_line(aes(x=X_p, y = WH_p), colour = 3)+
    geom_abline()

# QQ plot
dt %>% ggplot(aes(sample=WH)) +
    geom_qq()+
    geom_qq_line() +
  xlab("Normal Quantile") + 
  ylab("Sample Quantile of WH transformed Chi-squared")


```

```         
```

```{r}
#| label: logistic distribution and logit transformation 
#| echo: false

## logit function: X=log(Y/(1-Y)) is the inverse CDF of standard logistic distribution: Y=exp(X)/(1+exp(X))
## where Y is between 0-1, while X is -Inf - Inf
curve(dlogis(x, location = 0, scale = 1), from=-4, to=4)

# p drawn from beta(1,1) ie, uniform distribution
d <- tibble(p = rbeta(10000,1,1)) %>% 
  mutate(odd=p/(1-p),
         logodd=log(odd),
         y=qnorm(p)) 

# logit(p) or log-odd is close to linear when p is between 0.25-0.75
d %>% 
  ggplot() + 
  geom_line(aes(x=p, y=logodd), col="green")+
  geom_line(aes(x=p, y=y), col="red")

## logit function is the inverse CDF of of standard logistic distribution
## inverse CDF transformation of a random variable from standard uniform distribution will generate a new 
## random variable follow the same distribution of the CDF 
d %>% 
  ggplot() + 
  xlim(-5, 5) +
  geom_histogram(aes(x=logodd, y=..density..), col="green", fill="green")+ # logodd follow logistic distribution
  geom_histogram(aes(x=y, y=..density..), col="red", fill="red", alpha=0.25) # y follow normal distribution
```

```{r}

#| label: weibull distribution
#| echo: false

curve(dweibull(x, shape=3, scale = 1), from=0, to=4)
curve(dweibull(x, shape=2, scale = 1), from=0, to=4, add=T, col="red")
curve(dweibull(x, shape=1.5, scale = 1), from=0, to=4, add=T, col="blue")
curve(dexp(x, rate=1), from=0, to=4, add = T, col="green")
#add legend
legend(2, 1, legend=c("shape=3, scale=1",
                       "shape=2, scale=1", 
                       "shape=1.5, scale=1",
                       "shape=1, scale=1"),
       col=c("black", "red", "blue", "green"), 
       lty=1, cex=0.6)
```
